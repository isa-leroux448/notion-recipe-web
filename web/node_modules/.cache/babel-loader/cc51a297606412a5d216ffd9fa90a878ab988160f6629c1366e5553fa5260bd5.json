{"ast":null,"code":"var _jsxFileName = \"/Users/isa/Desktop/notion-recipes/notion-recipe-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Client } from \"@notionhq/client\";\nimport { createChildren } from \"./notion\";\n// import dotenv from 'dotenv';\n// dotenv.config();\n\n// const notion = new Client({ auth: process.env.NOTION_SECRET })\n// const databaseId = process.env.NOTION_DATABASE\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  async function addPage(title, image, ingredients, steps) {\n    const children = createChildren(ingredients, steps);\n    try {\n      const response = await notion.pages.create({\n        parent: {\n          database_id: databaseId\n        },\n        properties: {\n          title: {\n            title: [{\n              \"text\": {\n                \"content\": title\n              }\n            }]\n          },\n          Link: {\n            type: 'url',\n            url: 'google.com'\n          }\n        },\n        cover: {\n          \"type\": \"external\",\n          \"external\": {\n            \"url\": image\n          }\n        },\n        children: children\n      });\n      console.log(response);\n      console.log(\"Success! Entry added.\");\n    } catch (error) {\n      console.error(error.body);\n    }\n  }\n  useEffect(() => {\n    // Using fetch to fetch the api from flask server it will be redirected to proxy\n    fetch(\"/data\").then(res => res.json().then(data => {\n      console.log(data);\n      addPage(data.Title, data.Image, data.Ingredients, data.Steps);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe Saver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Client","createChildren","jsxDEV","_jsxDEV","App","_s","addPage","title","image","ingredients","steps","children","response","notion","pages","create","parent","database_id","databaseId","properties","Link","type","url","cover","console","log","error","body","fetch","then","res","json","data","Title","Image","Ingredients","Steps","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/isa/Desktop/notion-recipes/notion-recipe-web/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Client } from \"@notionhq/client\"\nimport { createChildren } from \"./notion\";\n// import dotenv from 'dotenv';\n// dotenv.config();\n\n// const notion = new Client({ auth: process.env.NOTION_SECRET })\n// const databaseId = process.env.NOTION_DATABASE\n\nfunction App() {\n  async function addPage(title, image, ingredients, steps) {\n    const children = createChildren(ingredients, steps);\n    try {\n        const response = await notion.pages.create({\n            parent: { database_id: databaseId },\n            properties: {\n                title: {\n                    title: [\n                        {\n                            \"text\": {\n                                \"content\": title\n                            }\n                        }\n                    ]\n                },\n                Link: {\n                    type: 'url',\n                    url: 'google.com'\n                },\n            },\n            cover: {\n                \"type\": \"external\",\n                \"external\": {\n                    \"url\": image\n                }\n            },\n            children: children,\n        })\n        console.log(response)\n        console.log(\"Success! Entry added.\")\n    } catch (error) {\n        console.error(error.body)\n    }\n}\n\n\n  useEffect(() => {\n      // Using fetch to fetch the api from flask server it will be redirected to proxy\n      fetch(\"/data\").then((res) =>\n          res.json().then((data) => {\n            console.log(data);\n            addPage(data.Title, data.Image, data.Ingredients, data.Steps);\n          })\n      );\n  }, []);\n\n  return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n              <h1>Recipe Saver</h1>\n\n          </header>\n      </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,cAAc,QAAQ,UAAU;AACzC;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,eAAeC,OAAOA,CAACC,KAAK,EAAEC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAE;IACvD,MAAMC,QAAQ,GAAGV,cAAc,CAACQ,WAAW,EAAEC,KAAK,CAAC;IACnD,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC;QACvCC,MAAM,EAAE;UAAEC,WAAW,EAAEC;QAAW,CAAC;QACnCC,UAAU,EAAE;UACRZ,KAAK,EAAE;YACHA,KAAK,EAAE,CACH;cACI,MAAM,EAAE;gBACJ,SAAS,EAAEA;cACf;YACJ,CAAC;UAET,CAAC;UACDa,IAAI,EAAE;YACFC,IAAI,EAAE,KAAK;YACXC,GAAG,EAAE;UACT;QACJ,CAAC;QACDC,KAAK,EAAE;UACH,MAAM,EAAE,UAAU;UAClB,UAAU,EAAE;YACR,KAAK,EAAEf;UACX;QACJ,CAAC;QACDG,QAAQ,EAAEA;MACd,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;MACrBY,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAACC,IAAI,CAAC;IAC7B;EACJ;EAGE5B,SAAS,CAAC,MAAM;IACZ;IACA6B,KAAK,CAAC,OAAO,CAAC,CAACC,IAAI,CAAEC,GAAG,IACpBA,GAAG,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;MACxBR,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;MACjB1B,OAAO,CAAC0B,IAAI,CAACC,KAAK,EAAED,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,WAAW,EAAEH,IAAI,CAACI,KAAK,CAAC;IAC/D,CAAC,CACL,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjC,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAA1B,QAAA,eAChBR,OAAA;MAAQkC,SAAS,EAAC,YAAY;MAAA1B,QAAA,eAC1BR,OAAA;QAAAQ,QAAA,EAAI;MAAY;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEZ;AAACpC,EAAA,CAvDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}