{"ast":null,"code":"var _jsxFileName = \"/Users/isa/Desktop/notion-recipes/notion-recipe-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pastedUrl, setPastedUrl] = useState('');\n  const [recipeData, setRecipeData] = useState(null);\n  const handleInputChange = e => {\n    setPastedUrl(e.target.value);\n  };\n  const handleButtonClick = () => {\n    sendAPIRequest(pastedUrl);\n  };\n  function sendAPIRequest(url) {\n    console.log(JSON.stringify({\n      recipe_url: url\n    }));\n    // Using fetch to fetch the api from flask server it will be redirected to proxy\n    fetch(\"/data\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        recipe_url: url\n      })\n    }).then(res => res.json().then(data => {\n      setRecipeData(data);\n      console.log(data);\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notion Recipe Saver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"recipeUrl\",\n          placeholder: \"Paste a recipe url here\",\n          value: pastedUrl,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonClick,\n          children: \"Add to Notion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), recipeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipeData.Image,\n            alt: \"recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: recipeData.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2PvfKCx7rQuPHQbrDuQQBnZVvMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","pastedUrl","setPastedUrl","recipeData","setRecipeData","handleInputChange","e","target","value","handleButtonClick","sendAPIRequest","url","console","log","JSON","stringify","recipe_url","fetch","method","headers","body","then","res","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","onChange","onClick","src","Image","alt","Title","_c","$RefreshReg$"],"sources":["/Users/isa/Desktop/notion-recipes/notion-recipe-web/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [pastedUrl, setPastedUrl] = useState('')\n  const [recipeData, setRecipeData] = useState(null);\n\n  const handleInputChange = (e) => {\n    setPastedUrl(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    sendAPIRequest(pastedUrl)\n  };\n\n  function sendAPIRequest(url) {\n    console.log(JSON.stringify({ recipe_url: url }))\n    // Using fetch to fetch the api from flask server it will be redirected to proxy\n    fetch(\"/data\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ recipe_url: url }),\n    })\n      .then((res) =>\n        res.json().then((data) => {\n          setRecipeData(data);\n          console.log(data);\n        })\n      );\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Notion Recipe Saver</h1>\n        <div className=\"input-container\">\n        <input\n          name=\"recipeUrl\"\n          placeholder=\"Paste a recipe url here\"\n          value={pastedUrl}\n          onChange={handleInputChange}\n        />\n        <button onClick={handleButtonClick}>Add to Notion</button>\n      </div>\n      {recipeData && (\n        <div className=\"recipe-container\">\n          <div className=\"recipe-info\">\n            <img src={recipeData.Image} alt=\"recipe\" />\n            <h5>{recipeData.Title}</h5>\n          </div>\n          <p>Added</p>\n        </div>\n      )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}