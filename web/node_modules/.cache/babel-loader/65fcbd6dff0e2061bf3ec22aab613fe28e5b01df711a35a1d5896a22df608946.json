{"ast":null,"code":"import { Client } from \"@notionhq/client\";\nimport dotenv from 'dotenv';\ndotenv.config();\nconst notion = new Client({\n  auth: process.env.NOTION_SECRET\n});\nconst databaseId = process.env.NOTION_DATABASE;\nfunction createChildren(ingredients, steps) {\n  const children = [];\n  const ingredientsHeader = {\n    object: 'block',\n    type: 'heading_1',\n    heading_1: {\n      \"rich_text\": [{\n        \"type\": \"text\",\n        \"text\": {\n          \"content\": \"Ingredients\"\n        }\n      }]\n    }\n  };\n  children.push(ingredientsHeader);\n  for (let i = 0; i < ingredients.length; i++) {\n    const currentIngredient = ingredients[i];\n    const ingredient = {\n      object: 'block',\n      type: 'bulleted_list_item',\n      \"bulleted_list_item\": {\n        \"rich_text\": [{\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": currentIngredient,\n            \"link\": null\n          }\n        }]\n      }\n    };\n    children.push(ingredient);\n  }\n  const stepsHeader = {\n    object: 'block',\n    type: 'heading_1',\n    heading_1: {\n      \"rich_text\": [{\n        \"type\": \"text\",\n        \"text\": {\n          \"content\": \"Steps\"\n        }\n      }]\n    }\n  };\n  children.push(stepsHeader);\n  for (let i = 0; i < steps.length; i++) {\n    const currentStep = steps[i];\n    const step = {\n      object: 'block',\n      type: 'numbered_list_item',\n      \"numbered_list_item\": {\n        \"rich_text\": [{\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": currentStep,\n            \"link\": null\n          }\n        }]\n      }\n    };\n    children.push(step);\n  }\n  return children;\n}\nasync function addPage(title, image, ingredients, steps) {\n  const children = createChildren(ingredients, steps);\n  try {\n    const response = await notion.pages.create({\n      parent: {\n        database_id: databaseId\n      },\n      properties: {\n        title: {\n          title: [{\n            \"text\": {\n              \"content\": title\n            }\n          }]\n        },\n        Link: {\n          type: 'url',\n          url: 'google.com'\n        }\n      },\n      cover: {\n        \"type\": \"external\",\n        \"external\": {\n          \"url\": image\n        }\n      },\n      children: children\n    });\n    console.log(response);\n    console.log(\"Success! Entry added.\");\n  } catch (error) {\n    console.error(error.body);\n  }\n}\naddPage(\"Recipe test\", \"https://upload.wikimedia.org/wikipedia/commons/4/47/PNG_transparency_demonstration_1.png\", ['a', 'b', 'c'], ['1', '2', '3']);","map":{"version":3,"names":["Client","dotenv","config","notion","auth","process","env","NOTION_SECRET","databaseId","NOTION_DATABASE","createChildren","ingredients","steps","children","ingredientsHeader","object","type","heading_1","push","i","length","currentIngredient","ingredient","stepsHeader","currentStep","step","addPage","title","image","response","pages","create","parent","database_id","properties","Link","url","cover","console","log","error","body"],"sources":["/Users/isa/Desktop/notion-recipes/notion-recipe-web/src/notion.js"],"sourcesContent":["import { Client } from \"@notionhq/client\"\nimport dotenv from 'dotenv';\ndotenv.config();\n\nconst notion = new Client({ auth: process.env.NOTION_SECRET })\n\nconst databaseId = process.env.NOTION_DATABASE\n\nfunction createChildren(ingredients, steps) {\n    const children = [];\n    const ingredientsHeader = {\n        object: 'block',\n        type: 'heading_1',\n        heading_1: {\n            \"rich_text\": [{ \"type\": \"text\", \"text\": { \"content\": \"Ingredients\" } }]\n        }\n    }\n    children.push(ingredientsHeader);\n    for (let i = 0; i < ingredients.length; i++) {\n        const currentIngredient = ingredients[i];\n        const ingredient = {\n            object: 'block',\n            type: 'bulleted_list_item',\n            \"bulleted_list_item\": {\n                \"rich_text\": [{\n                    \"type\": \"text\",\n                    \"text\": {\n                        \"content\": currentIngredient,\n                        \"link\": null\n                    }\n                }],\n            },\n        }\n        children.push(ingredient);\n    }\n    const stepsHeader = {\n        object: 'block',\n        type: 'heading_1',\n        heading_1: {\n            \"rich_text\": [{ \"type\": \"text\", \"text\": { \"content\": \"Steps\" } }]\n        }\n    }\n    children.push(stepsHeader);\n    for (let i = 0; i < steps.length; i++) {\n        const currentStep = steps[i];\n        const step = {\n            object: 'block',\n            type: 'numbered_list_item',\n            \"numbered_list_item\": {\n                \"rich_text\": [{\n                    \"type\": \"text\",\n                    \"text\": {\n                        \"content\": currentStep,\n                        \"link\": null\n                    }\n                }],\n            },\n        }\n        children.push(step);\n    }\n    return children;\n}\n\nasync function addPage(title, image, ingredients, steps) {\n    const children = createChildren(ingredients, steps);\n    try {\n        const response = await notion.pages.create({\n            parent: { database_id: databaseId },\n            properties: {\n                title: {\n                    title: [\n                        {\n                            \"text\": {\n                                \"content\": title\n                            }\n                        }\n                    ]\n                },\n                Link: {\n                    type: 'url',\n                    url: 'google.com'\n                },\n            },\n            cover: {\n                \"type\": \"external\",\n                \"external\": {\n                    \"url\": image\n                }\n            },\n            children: children,\n        })\n        console.log(response)\n        console.log(\"Success! Entry added.\")\n    } catch (error) {\n        console.error(error.body)\n    }\n}\n\naddPage(\"Recipe test\", \"https://upload.wikimedia.org/wikipedia/commons/4/47/PNG_transparency_demonstration_1.png\", ['a','b','c'], ['1','2','3'])\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}